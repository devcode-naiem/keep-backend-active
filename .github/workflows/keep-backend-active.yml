name: Keep Backend Active

# Define triggers for the workflow
on:
  schedule:
    - cron: '*/5 * * * *' # Run every 5 minutes
  workflow_dispatch: # Allow manual triggering of the workflow

jobs:
  keep-backend-alive:
    runs-on: ubuntu-latest

    env:
      BACKEND_API_URL: ${{ secrets.BACKEND_API_URL }} # Backend API URL from GitHub Secrets
      EXPECTED_STATUS_CODE: 200                      # Expected HTTP status code

    steps:
      # Step 1: Log the start of the workflow
      - name: Log Workflow Start
        run: |
          echo "Starting the Keep Backend Active workflow at $(date)."
          echo "Backend API URL: $BACKEND_API_URL"

      # Step 2: Ping the backend API and handle output
      - name: Ping Backend API
        run: |
          echo "Pinging the backend API at $BACKEND_API_URL..."
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" $BACKEND_API_URL)
          echo "Received HTTP status code: $RESPONSE"
          echo "response_code=$RESPONSE" >> $GITHUB_OUTPUT
          if [ "$RESPONSE" -ne "$EXPECTED_STATUS_CODE" ]; then
            echo "Error: Unexpected HTTP status code $RESPONSE"
            exit 1
          fi

      # Step 3: Log successful execution
      - name: Log Success
        if: always()
        run: |
          echo "The backend API was successfully pinged at $(date)."

  notify-on-failure:
    needs: keep-backend-alive
    if: failure() # Run only when the main job fails
    runs-on: ubuntu-latest

    steps:
      # Step 1: Log failure details
      - name: Log Failure Details
        run: |
          echo "The Keep Backend Active workflow failed at $(date)."
          echo "Check the workflow logs for details."

      # Step 2: Send GitHub email notification
      - name: Send Email Notification
        run: |
          echo "::error::The Keep Backend Active workflow failed. Please check the logs for details. HTTP status code: ${{ needs.keep-backend-alive.outputs.response_code }}"
